---
title: "The Dynamics of Triple Stars"
subtitle: "Journal club presentation 26.10.2023"
author: "Caspar Bruenech"
format: 
    revealjs:
        theme: night
        incremental: true
title-slide-attributes:
  data-background-image: figures/61h9sODzGVL.jpg
jupyter: julia-1.9
---


## Warm up: binary dynamics


- Gravitational two-body problem
- Analytical solution => stable
- Keplerian orbit
- Two main parameters
    - Semi-major axis
    - Eccentricity

## The three-body problem 

![](figures/3bodyprob.jpg){fig-align="center"}

## The three-body problem

![](https://upload.wikimedia.org/wikipedia/commons/1/1c/Three-body_Problem_Animation_with_COM.gif){fig-align="center"}

## The three-body problem  

  - No *analytical* solution
    - There are solutions, but only numerical
      - Example: [figure eight](https://en.wikipedia.org/wiki/Three-body_problem#/media/File:Three_body_problem_figure-8_orbit_animation.gif){preview-link="true"}
  - Chaotic and unstable
    - Sensitive to initial conditions
    - Short-lived
  - Why do we see triples?

  
## The hierarcichal configuration {.smaller}

  - A specific configuration of three gravitationally bound bodies
  - Allows for long periods of stability
  - Approximated as two keplerian orbits
    1. Primary + secondary
    2. Tertiary + COM of primary and secondary
  - Larger parameter space
    - $a_\text{in}$, $a_\text{out}$
    - $e_\text{in}$, $e_\text{out}$
    - $g_\text{in}$, $g_\text{out}$
    - $h_\text{in}$, $h_\text{out}$
    - $i_\text{mut}$
  
## The hierarcichal configuration
![](figures/2-Figure1-2.png){fig-align="center"}


# What do hierarchical triples look like?

## {background-video="figures/triple_animation.mp4" background-video-loop="true" background-size="contain"}

## {background-video="figures/triple_animation_inclination.mp4" background-video-loop="true" background-size="contain"}

## The von Zeipel-Kozai-Lidov mechanism
  - Present when there are more than 2 bodies
  - Periodic changes in mutual inclination and eccentricity
  - Can excite eccentricites from near zero to near one
  - Secular effect


## {background-video="figures/triple_animation_kozailidov.mp4" background-video-loop="true" background-size="contain"}

## {background-video="figures/triple_animation_kozailidov_inner_2.mp4" background-video-loop="true" background-size="contain"}

## A closer look

![](figures/orbital_elements.png){fig-align="center"}

## Stability
  - Hierarcichal triples are not stable forever
  - Estimation of stability:
    - $\frac{a_\text{out}}{a_\text{in}}|_\text{crit} = \frac{2.8}{1 - e_\text{out}} \left(1 - \frac{0.3i}{\pi}\right) \left(\frac{(1 + q_\text{out})(1 + e_\text{out})}{\sqrt{1 - e_\text{out}}} \right)$
      - Aarseth, S. J., & Mardling, R. A. 2001
  - Can change during the lifetime of the triple
  - Triples can go from stable to unstable
    - Winds/mass loss

## What happens to destabilized triples? {.smaller}
:::: {.columns}

::: {.column width="40%"}
  - Some stay hierarchical
  - *Democratic* phase
    - Chaotic
    - Short-lived
  - Close passage
  - Several potential outcomes
    - Ejection
    - Drifter
    - Collision/merger
    - Ionization
    - (Partial) tidal disruption?
:::

::: {.column width="60%"}
  - Result
    - One binary with a merger product
    - One binary and one single star
    - Three single stars
    - Other exotica
:::

::::

  
## {background-video="figures/triple_animation_destabilize.mp4" background-video-loop="true" background-size="contain"}

# Simulating Massive Triples on the Edge of Stability

## Quick sidestep: secular vs dynamical evolution

  - Long vs short timescales
  - Different set of ODEs
    - Positions vs orbital elements
  - Secular: no information about exact positions
    - Orbit-averaged
    - Only works in for hierarchical configuration
  - Dynamical: positions and velocities

## Massive, unstable triples
  - Start with secular evolution
    - Thanks, Floris!
  - Stop if system becomes unstable
  - Transfer unstable system to nbody code
    - True anomaly?
  - Simulate until some stopping condition

## Massive, unstable triples

![](figures/outcomes.png){fig-align="center"}

## Syzygy.jl

::: {style="text-align: center; margin-top: 1em"}
[https://github.com/casparwb/Syzygy.jl](https://github.com/casparwb/Syzygy.jl){preview-link="true" style="text-align: center"}
:::

  - Julia code for dynamic simulations of hierarchical multiples
  - Supports arbitrary multiplicity and configurations
    - Binary, Triples, 2+2 quad, 3+1 quad, etc... 
  - Very fast: 2x - 60x faster than other nbody codes
    - Also orders of magnitude more stable
  - Uses formalism from Hamers and Portegies Zwart, 2016

## Syzygy.jl {chalkboard-buttons="true"}
![](figures/hierarchy.png){fig-align="center"}
  
## Syzygy.jl example: triple setup 


```{.julia code-line-numbers="|1|3|4|6|7|8|10"}
# ]add https://github.com/casparwb/Syzygy.jl

using Syzygy
using Syzygy.Unitful, Syzygy.UnitfulAstro

masses = [1., 1., 1.]u"Msun"
sma = [0.1, 1.0]u"AU"
ecc = [0.1, 0.6]

triple = multibodysystem(masses, a=sma, e=ecc)
```
## Syzygy.jl example: triple setup {.scrollable}
```{julia}
#| output-location: slide
# ]add https://github.com/casparwb/Syzygy.jl

using Syzygy
using Syzygy.Unitful, Syzygy.UnitfulAstro

masses = [1., 1., 1.]u"Msun"
sma = [0.1, 1.0]u"AU"
ecc = [0.1, 0.6]

triple = multibodysystem(masses, a=sma, e=ecc)
```


## Syzygy.jl example: triple simulation 

```{julia}
#| echo: true
#| output-location: slide

using Plots
Plots.theme(:dark)
simulation = simulate(triple, t_sim = 2, npoints=1_000)
solution = analyse_simulation(simulation)
orbitplot(solution, dims=[1, 2], linecolor=[:red :cyan :green])
```

## Syzygy.jl example: quadruple

```{.julia code-line-numbers="1-6"}
masses = [1., 1., 1., 1.]u"Msun"
e = [0.1, 0.1, 0.1]
a = [0.1, 0.1, 1.0]u"AU"

quad_3p1 = multibodysystem(masses, e=e, a=a)
quad_2p2 = multibodysystem(masses, e=e, a=a, hierarchy=[4, 2, 1])

sol_3p1 = simulate(quad_3p1, t_sim=1, npoints=1_000, callbacks=[]).solution.u
sol_2p2 = simulate(quad_2p2, t_sim=1, npoints=1_000, callbacks=[]).solution.u

p1 = plot([u.x[2][1,1] for u in sol_3p1], [u.x[2][2,1] for u in sol_3p1], 
          label=false, title="3 + 1", xticks=nothing, yticks=nothing, border=:none)
p2 = plot([u.x[2][1,1] for u in sol_2p2], [u.x[2][2,1] for u in sol_2p2], 
          label=false, title="2 + 2", xticks=nothing, yticks=nothing, border=:none)

for i = 2:4
  plot!(p1, [u.x[2][1,i] for u in sol_3p1], [u.x[2][2,i] for u in sol_3p1], label=false)
  plot!(p2, [u.x[2][1,i] for u in sol_2p2], [u.x[2][2,i] for u in sol_2p2], label=false)
end

plot(p1, p2, layout=(1, 2))
```
## Syzygy.jl example: quadruple
```{julia}
masses = [1., 1., 1., 1.]u"Msun"
e = [0.1, 0.1, 0.1]
a = [0.1, 0.1, 1.0]u"AU"

quad_3p1 = multibodysystem(masses, e=e, a=a)
quad_2p2 = multibodysystem(masses, e=e, a=a, hierarchy=[4, 2, 1])

sol_3p1 = simulate(quad_3p1, t_sim=1, npoints=1_000, callbacks=[]).solution.u
sol_2p2 = simulate(quad_2p2, t_sim=1, npoints=1_000, callbacks=[]).solution.u

p1 = plot([u.x[2][1,1] for u in sol_3p1], [u.x[2][2,1] for u in sol_3p1], 
          label=false, title="3 + 1", xticks=nothing, yticks=nothing, border=:none, aspect_ratio=1)
p2 = plot([u.x[2][1,1] for u in sol_2p2], [u.x[2][2,1] for u in sol_2p2], 
          label=false, title="2 + 2", xticks=nothing, yticks=nothing, border=:none, aspect_ratio=1)

for i = 2:4
  plot!(p1, [u.x[2][1,i] for u in sol_3p1], [u.x[2][2,i] for u in sol_3p1], label=false)
  plot!(p2, [u.x[2][1,i] for u in sol_2p2], [u.x[2][2,i] for u in sol_2p2], label=false)
end

plot(p1, p2, layout=(1, 2))
# orbitplot!(sol_2p2, dims=[1, 2], linestyle=:dash, label=false)
# plot(quad_3p1)
```

## Summary

- Triples are pretty cool.

# And thus endeth my presentation.
